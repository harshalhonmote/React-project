{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","_ref","inputText","setInputText","todos","setTodos","setStatus","react_default","a","createElement","value","onChange","e","console","log","target","type","placeholder","className","onClick","preventDefault","trim","length","concat","Object","toConsumableArray","text","completed","id","Math","random","name","Todo","todo","map","item","objectSpread","filter","el","TodoList","filteredTodos","components_Todo","key","App","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","status","_useState7","_useState8","setFilteredTodos","useEffect","filterHandler","components_Form","components_TodoList","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c30b9bdb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value)\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    if(inputText.trim().length !==0){\r\n      setTodos([\r\n        ...todos,\r\n        { text: inputText, completed: false, id: Math.random() * 1000 },\r\n      ]);\r\n    } else {\r\n      console.log(\"jjjjjjjjj\");\r\n    }\r\n    // setTodos([\r\n    //   ...todos,\r\n    //   { text: inputText, completed: false, id: Math.random() * 1000 },\r\n    // ]);\r\n    setInputText(\"\");\r\n  };\r\nconst statusHandler= (e)=>{\r\n  setStatus(e.target.value);\r\n}\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText} \r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        placeholder=\" Enter Todo\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button> \r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({text, todo, setTodos, todos}) => {\r\n  const deleteHandler= () =>{\r\n    //console.log(todo);\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n  const completeHandler = () => {\r\n    setTodos(todos.map((item)=>{\r\n      if(item.id === todo.id){\r\n        return{\r\n          ...item, completed: !item.completed\r\n        };\r\n      }\r\n      return item;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed? \"completed\":''}`}> {text} </li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n//Importing components\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos, filteredTodos, setTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          //console.log(todo)\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}